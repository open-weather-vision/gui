@import "../../variables.less";

.dropPoint {
    position: relative;
    max-width: 0.1rem;
    background-color: rebeccapurple;
}

.sensorView {
    position: relative;
    box-sizing: border-box;
    padding: 1rem;
    border: 1px solid var(--borderColor2);
    background-color: var(--backgroundColor2);
    border-radius: 0.5rem;
    color: var(--color2);
    display: flex;
    flex-direction: column;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease-in-out, filter 0s;
    user-select: none;
    min-width: 18rem !important;
    flex: 1 1 0;
    width: 0;

    &::after {
        --width: 0.2rem;
        --sensor-grid-gap: 1rem;
        content: "";
        display: block;
        width: var(--width);
        height: 100%;
        background-color: var(--color2);
        border-radius: 1rem;
        position: absolute;
        left: calc(100% + - 0.3 * var(--width) + 0.5 * var(--sensor-grid-gap));
        transition: all 0.4s;
        opacity: 0;
    }

    &.dragTarget::after {
        opacity: 1;
    }

    &.dragged {
        border: 1px solid var(--accentColor) !important;
    }

    &.weather-state {
        flex-basis: 100%;
        overflow: hidden;
        background-color: var(--weatherStateBackground);

        .backgroundImage {
            width: 100%;
            height: 100%;
            background-size: cover;
            position: absolute;
            top: 0;
            left: 0;
            border-radius: 0.5rem;
            opacity: var(--weatherStateBackgroundOpacity);
        }

        .sensorData {
            display: flex;
            justify-content: center;
            align-items: center;
            fill: white;
            position: relative;
            overflow: hidden;
            height: 11rem;

            svg {
                width: 9rem;
                height: 9rem;
                padding: 1rem;
            }

            .now {
                .weatherIcon {
                    width: 8rem;
                    height: 8rem;
                }
                border-radius: 0.5rem;
                box-sizing: border-box;
                min-width: 100%;
                margin-left: 0;
                display: flex;
                justify-content: center;
                justify-items: center;
                align-items: center;
                opacity: 1;
                transition: all 0.3s ease-in-out;

                &.hidden {
                    opacity: 0;
                }
            }

            .scrollableForecast {
                display: flex;
                flex-direction: row;
                flex-wrap: nowrap;
                column-gap: 0.5rem;
                align-items: center;
                align-content: center;
                justify-content: flex-start;
                margin-left: 0;
                max-width: 100%;
                padding: 0.5rem 0;

                .forecastArrow {
                    min-width: 3rem;
                    height: 3rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    background-color: var(--backgroundColor2);
                    color: var(--color2);
                    border: 1px solid var(--borderColor2);
                    border-radius: 5rem;

                    svg {
                        width: 2rem;
                        height: 2rem;
                        color: var(--color2);
                        margin: 0;
                        padding: 0;
                    }
                }

                position: absolute;
                left: 5rem;
                opacity: 0;
                pointer-events: none;

                &.open {
                    left: 0;
                    opacity: 1;
                    pointer-events: initial;
                }

                transition: all 0.3s ease-in-out;

                .forecastItem {
                    font-size: 0.8rem;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    text-align: center;
                    font-weight: 600;

                    background-color: var(--backgroundColor2);
                    opacity: 1;
                    border: 1px solid var(--borderColor2);
                    border-radius: 0.5rem;
                    padding: 1rem 0rem;
                    box-sizing: border-box;

                    .time {
                        opacity: 0.8;
                        margin-bottom: 0.2rem;
                    }

                    .temperature {
                        font-family: "Roboto Mono", monospace;
                        padding: 0.2rem;
                        width: 3rem;
                        border-radius: 0.2rem 0.2rem 0 0;
                        background-color: rgb(255, 220, 220);
                        color: red;
                        border: 1px solid red;
                    }

                    .precipation {
                        color: var(--rainColor);
                        padding: 0.2rem;
                        width: 3rem;
                        border-radius: 0 0 0.2rem 0.2rem;
                        background-color: var(--rainBackgroundColor);
                        font-family: "Roboto Mono", monospace;
                        border: 1px solid var(--rainBorderColor);
                        border-top: 0;

                        &.zeroPrecipation {
                            filter: grayscale(1) opacity(0.3);
                        }
                    }

                    .unit {
                        font-size: 0.6rem;
                        padding: 0;
                        margin-left: 0.1rem;
                    }

                    .weatherIcon {
                        width: 2.5rem;
                        height: 2.5rem;
                        box-sizing: border-box;
                        margin: 1rem 1.5rem;
                        background-size: 100% 100%;
                        background-position: center center;
                    }
                }
            }
        }

        .label {
            position: relative;
        }
    }

    &.precipation,
    &.precipation-rate,
    &.shower-precipation,
    &.precipation-probability {
        .sensorData .value {
            color: var(--rainColor);
        }

        background: var(--rainBackgroundColor);
        border-color: var(--rainBorderColor);

        &:focus:not(.dragged) {
            border: 1px solid var(--rainBorderColorLighten);
        }
        /*.rainGradient();*/
    }

    &.leaf-temperature,
    &.leaf-wetness,
    &.soil-temperature,
    &.soil-moisture,
    &.soil-ph {
        .sensorData .value {
            color: var(--leafColor);
        }

        background: var(--leafBackgroundColor);
        border-color: var(--leafBorderColor);

        &:focus:not(.dragged) {
            border: 1px solid var(--leafBorderColorLighten);
        }

        /*.leafGradient();*/
    }

    &.wind-speed,
    &.wind-direction,
    &.wind-gust {
        .sensorData .value {
            color: var(--windColor);
        }

        background: var(--windBackgroundColor);
        border-color: var(--windBorderColor);

        &:focus:not(.dragged) {
            border: 1px solid var(--windBorderColorLighten);
        }
    }

    &.wind-direction {
        flex-grow: 9999;
        flex-basis: 100%;
    }

    &.solar-radiation,
    &.uv,
    &.sunshine {
        .sensorData .value {
            color: var(--sunColor);
        }

        background: var(--sunBackgroundColor);
        border-color: var(--sunBorderColor);

        &:focus:not(.dragged) {
            border: 1px solid var(--sunBorderColorLighten);
        }

        /*.sunGradient();*/
    }

    &:focus:not(.dragged) .details,
    .details:focus-within,
    .details:active {
        visibility: visible;
        pointer-events: all;
        opacity: 1;
    }

    &:focus:not(.dragged) {
        border: 1px solid var(--borderColor2Lighten);
    }

    .details {
        position: absolute;
        z-index: 50;
        top: 0px;
        bottom: 0px;
        left: 0px;
        right: 0px;
        background: var(--sensorViewOverlayColor);
        backdrop-filter: blur(5px);
        border-radius: 0.5rem;
        box-sizing: border-box;
        padding: 1.5rem;
        transition: all 0.1s ease-in-out;
        font-size: 0.8rem;
        display: flex;
        flex-direction: column;
        row-gap: 0.5rem;
        visibility: none;
        pointer-events: none;
        opacity: 0;
        text-align: left;

        .buttonArea {
            margin-top: auto;
            display: flex;
            flex-direction: row;
            gap: 0.5rem;
        }

        .description {
            margin: 0;
            height: 2rem;
            text-overflow: ellipsis;
            overflow: hidden;
            text-wrap-mode: wrap;
            display: -webkit-box;
            -webkit-line-clamp: 2; /* Number of lines */
            line-clamp: 2;
            -webkit-box-orient: vertical;
            width: 100%;
        }
    }

    .windDirectionContainer {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.6rem 0.6rem 1.2rem 0.3rem;

        svg {
            &.compass {
                height: 9rem;
                width: 9rem;
                color: var(--windCompassDirection);
                fill: var(--windCompassBackground);
            }

            &.arrow {
                color: var(--windCompassArrow);
                position: absolute;
                width: 3rem;
                transition: all 0.3s ease-in-out;
            }
        }
    }

    &.disconnected {
        opacity: 1;
        cursor: not-allowed;
    }

    .sensorData {
        font-weight: 600;
        font-size: 2.5rem;
        padding: 0.6rem 0.6rem 1.2rem 0.3rem;
        display: flex;
        flex-direction: row;
        align-items: baseline;

        .value {
            color: var(--accentColor);
        }

        .disconnectedView {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 0.5rem;

            .disconnectedIcon {
                color: var(--sensorDisconnectedColor);
                fill: var(--sensorDisconnectedColor);
                width: 24px;
            }

            color: var(--sensorDisconnectedColor);
            font-size: 1.5rem;
        }

        .unit {
            font-size: 1.5rem;
            margin-left: 0.5rem;
            margin-top: 0.5rem;
            font-weight: 400;
            transition: all 0.3s ease-in-out;
        }
    }

    .label {
        font-size: 0.8rem;
        display: flex;
        align-content: center;
        font-weight: 600;
        align-items: center;

        svg {
            margin-right: 0.5rem;
            width: 17px;
            height: 17px;
        }

        .location {
            padding: 0.3rem;
            background: var(--accentColorDark);
            color: var(--accentColor);
            font-size: 0.6rem;
            border-radius: 0.2rem;
            margin-left: auto;
            text-transform: uppercase;
            font-weight: 800;
            letter-spacing: 0.05rem;
        }
    }

    @media screen and (min-width: 450px) {
        /*.gradient1();*/
    }

    @media screen and (min-width: 600px) {
        min-width: 15rem;
    }

    @media screen and (min-width: 1000px) {
        min-width: 18rem;

        .windDirectionContainer {
            svg.compass {
                height: 12rem;
                width: 12rem;
            }

            svg.arrow {
                width: 4rem;
            }
        }
    }
}
