@import "../../variables.less";

.sensorView {
    position: relative;
    box-sizing: border-box;
    padding: 1rem;
    border: 1px solid @borderColor2;
    background-color: @backgroundColor2;
    border-radius: 0.5rem;
    /*.gradient2();*/
    /*box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.3);*/
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    user-select: none;
    min-width: 18rem !important;

    &.weather-state {
        flex-basis: 100%;
        overflow: hidden;

        .backgroundImage {
            width: 100%;
            height: 100%;
            background-size: cover;
            position: absolute;
            top: 0;
            left: 0;
            border-radius: 0.5rem;
            opacity: 0.3;
        }

        .sensorData {
            display: flex;
            justify-content: center;
            align-items: center;
            fill: white;
            position: relative;
            overflow: hidden;
            height: 11rem;

            svg {
                width: 9rem;
                height: 9rem;
                padding: 1rem;
            }

            .now {
                .weatherIcon {
                    width: 8rem;
                    height: 8rem;
                }
                border-radius: 0.5rem;
                box-sizing: border-box;
                min-width: 100%;
                margin-left: 0;
                display: flex;
                justify-content: center;
                justify-items: center;
                align-items: center;
                opacity: 1;
                transition: all 0.3s ease-in-out;

                &.hidden {
                    opacity: 0;
                }
            }

            .scrollableForecast {
                display: flex;
                flex-direction: row;
                flex-wrap: nowrap;
                column-gap: 0.5rem;
                align-items: center;
                align-content: center;
                justify-content: flex-start;
                margin-left: 0;
                max-width: 100%;
                padding: 0.5rem 0;

                .forecastArrow {
                    min-width: 3rem;
                    height: 3rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    background-color: @backgroundColor2;
                    /*.gradient1();*/
                    color: @color1;
                    border: 1px solid @borderColor2;
                    border-radius: 5rem;

                    svg {
                        width: 2rem;
                        height: 2rem;

                        margin: 0;
                        padding: 0;
                    }
                }

                position: absolute;
                left: 5rem;
                opacity: 0;
                pointer-events: none;

                &.open {
                    left: 0;
                    opacity: 1;
                    pointer-events: initial;
                }

                transition: all 0.3s ease-in-out;

                .forecastItem {
                    font-size: 0.8rem;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    text-align: center;
                    font-weight: 600;

                    background-color: fade(@backgroundColor2, 50%);
                    opacity: 1;
                    backdrop-filter: blur(10px);
                    /*.gradient2();*/
                    border-radius: 0.5rem;
                    padding: 1rem 0rem;
                    box-sizing: border-box;
                    /*box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.3);*/

                    .time {
                        opacity: 0.8;
                        margin-bottom: 0.2rem;
                    }

                    .temperature {
                        font-family: "Roboto Mono", monospace;
                    }

                    .precipation {
                        color: lightblue;
                        font-family: "Roboto Mono", monospace;

                        &.zeroPrecipation {
                            color: rgba(255, 255, 255, 0.233);
                        }
                    }

                    .unit {
                        font-size: 0.6rem;
                        padding: 0;
                        margin-left: 0.1rem;
                    }

                    .weatherIcon {
                        width: 2.5rem;
                        height: 2.5rem;
                        box-sizing: border-box;
                        margin: 1rem 1.5rem;
                        background-size: 100% 100%;
                        background-position: center center;
                    }
                }
            }
        }

        .label {
            position: relative;
        }
    }

    &.precipation,
    &.precipation-rate,
    &.shower-precipation,
    &.precipation-probability {
        .sensorData .value {
            color: @rainColor;
        }

        background: @rainBackgroundColor;
        border-color: @rainBorderColor;
        /*.rainGradient();*/
    }

    &.leaf-temperature,
    &.leaf-wetness,
    &.soil-temperature,
    &.soil-moisture,
    &.soil-ph {
        .sensorData .value {
            color: @leafColor;
        }

        background: @leafBackgroundColor;
        border-color: @leafBorderColor;

        /*.leafGradient();*/
    }

    &.wind-speed,
    &.wind-direction,
    &.wind-gust {
        .sensorData .value {
            color: @windColor;
        }

        background: @windBackgroundColor;
        border-color: @windBorderColor;

        /*.windGradient();*/
    }

    &.wind-direction {
        flex-grow: 9999;
        flex-basis: 100%;
    }

    &.solar-radiation,
    &.uv,
    &.sunshine {
        .sensorData .value {
            color: @sunColor;
        }

        background: @sunBackgroundColor;
        border-color: @sunBorderColor;

        /*.sunGradient();*/
    }

    .details {
        position: absolute;
        z-index: 50;
        top: 0px;
        bottom: 0px;
        left: 0px;
        right: 0px;
        background: rgba(31, 36, 45, 0.777);
        backdrop-filter: blur(5px);
        border-radius: 0.5rem;
        box-sizing: border-box;
        padding: 1.5rem;
        transition: all 0.15s ease-in-out;
        font-size: 0.8rem;
        display: flex;
        flex-direction: column;
        row-gap: 0.5rem;

        &.hidden {
            visibility: none;
            pointer-events: none;
            opacity: 0;
        }

        .buttonArea {
            margin-top: auto;

            button {
                background-color: @backgroundColor1;
                padding: 0.6rem;
                margin-right: 0.5rem;
                border-radius: 0.4rem;
                font-weight: 600;
                border: 1px solid @accentColor;
                color: @color1;
                transition: all 0.2s ease-in-out;
                cursor: pointer;

                &:active {
                    transform: scale(1.05);
                }

                @media (pointer: fine) {
                    &:hover {
                        background-color: @accentColor;
                        color: @backgroundColor1;
                    }
                }
            }
        }
    }

    .windDirectionContainer {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.6rem 0.6rem 1.2rem 0.3rem;

        svg {
            &.compass {
                height: 9rem;
                width: 9rem;
            }

            &.arrow {
                position: absolute;
                width: 3rem;
                transition: all 0.3s ease-in-out;
            }
        }
    }

    .sensorData {
        font-weight: 600;
        font-size: 2.5rem;
        padding: 0.6rem 0.6rem 1.2rem 0.3rem;
        display: flex;
        flex-direction: row;
        align-items: baseline;

        .value {
            color: @accentColor;
        }

        .unit {
            font-size: 1.5rem;
            margin-left: 0.5rem;
            margin-top: 0.5rem;
            font-weight: 400;
            transition: all 0.3s ease-in-out;
        }
    }

    .label {
        font-size: 0.8rem;
        display: flex;
        align-content: center;
        font-weight: 600;
        align-items: center;

        svg {
            margin-right: 0.5rem;
            width: 17px;
            height: 17px;
        }

        .location {
            padding: 0.3rem;
            background: @accentColorDark;
            color: @accentColor;
            font-size: 0.6rem;
            border-radius: 0.2rem;
            margin-left: auto;
            text-transform: uppercase;
            font-weight: 800;
            letter-spacing: 0.05rem;
        }
    }

    @media screen and (min-width: 450px) {
        /*.gradient1();*/
    }

    @media screen and (min-width: 600px) {
        min-width: 15rem;
    }

    @media screen and (min-width: 1000px) {
        min-width: 18rem;

        .windDirectionContainer {
            svg.compass {
                height: 12rem;
                width: 12rem;
            }

            svg.arrow {
                width: 4rem;
            }
        }
    }
}
