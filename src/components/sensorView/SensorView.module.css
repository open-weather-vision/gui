/* Global variables */
.rainGradient {
  background-color: #162049;
  background: linear-gradient(90deg, #37549d 0%, rgba(55, 84, 157, 0.5) 100%);
}
.leafGradient {
  background-color: #1d291e;
  background: linear-gradient(90deg, #303d31 0%, rgba(48, 61, 49, 0.5) 100%);
}
.windGradient {
  background-color: #2b192e;
  background: linear-gradient(90deg, #3b303d 0%, rgba(59, 48, 61, 0.5) 100%);
}
.sunGradient {
  background-color: #2c2b1d;
  background: linear-gradient(90deg, #3d3c30 0%, rgba(61, 60, 48, 0.5) 100%);
}
.gradient1 {
  background-color: #1f2124;
  background: linear-gradient(90deg, #2d3138 0%, #1e2024 100%);
}
.gradient2 {
  background-color: #1f2124;
  background: linear-gradient(90deg, #2d3138 0vw, #1e2024 100vw);
}
.sensorView {
  position: relative;
  box-sizing: border-box;
  padding: 1.2rem;
  border: 1px solid #343c41;
  background-color: #111214;
  border-radius: 0.5rem;
  /*.gradient2();*/
  /*box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.3);*/
  color: white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  user-select: none;
  min-width: 18rem !important;
}
.sensorView.weather-state {
  flex-basis: 100%;
  overflow: hidden;
}
.sensorView.weather-state .backgroundImage {
  width: 100%;
  height: 100%;
  background-size: cover;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 0.5rem;
  opacity: 0.3;
}
.sensorView.weather-state .sensorData {
  display: flex;
  justify-content: center;
  align-items: center;
  fill: white;
  position: relative;
  overflow: hidden;
  height: 11rem;
}
.sensorView.weather-state .sensorData svg {
  width: 9rem;
  height: 9rem;
  padding: 1rem;
}
.sensorView.weather-state .sensorData .now {
  border-radius: 0.5rem;
  box-sizing: border-box;
  min-width: 100%;
  margin-left: 0;
  display: flex;
  justify-content: center;
  justify-items: center;
  align-items: center;
  opacity: 1;
  transition: all 0.3s ease-in-out;
}
.sensorView.weather-state .sensorData .now .weatherIcon {
  width: 8rem;
  height: 8rem;
}
.sensorView.weather-state .sensorData .now.hidden {
  opacity: 0;
}
.sensorView.weather-state .sensorData .scrollableForecast {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  column-gap: 0.5rem;
  align-items: center;
  align-content: center;
  justify-content: flex-start;
  margin-left: 0;
  max-width: 100%;
  padding: 0.5rem 0;
  position: absolute;
  left: 5rem;
  opacity: 0;
  pointer-events: none;
  transition: all 0.3s ease-in-out;
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastArrow {
  min-width: 3rem;
  height: 3rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #111214;
  /*.gradient1();*/
  color: #fff;
  border: 1px solid #343c41;
  border-radius: 5rem;
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastArrow svg {
  width: 2rem;
  height: 2rem;
  margin: 0;
  padding: 0;
}
.sensorView.weather-state .sensorData .scrollableForecast.open {
  left: 0;
  opacity: 1;
  pointer-events: initial;
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastItem {
  font-size: 0.8rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-weight: 600;
  background-color: #111214;
  /*.gradient2();*/
  border-radius: 0.5rem;
  border: 1px solid #343c41;
  padding: 1rem 0rem;
  box-sizing: border-box;
  /*box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.3);*/
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastItem .time {
  opacity: 0.8;
  margin-bottom: 0.2rem;
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastItem .temperature {
  font-family: "Roboto Mono", monospace;
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastItem .precipation {
  color: lightblue;
  font-family: "Roboto Mono", monospace;
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastItem .unit {
  font-size: 0.6rem;
  padding: 0;
  margin-left: 0.1rem;
}
.sensorView.weather-state .sensorData .scrollableForecast .forecastItem .weatherIcon {
  width: 2.5rem;
  height: 2.5rem;
  box-sizing: border-box;
  margin: 1rem 1.5rem;
  background-size: 100% 100%;
  background-position: center center;
}
.sensorView.weather-state .label {
  position: relative;
}
.sensorView.precipation,
.sensorView.precipation-rate,
.sensorView.shower-precipation,
.sensorView.precipation-probability {
  background: #162049;
  border-color: #2e4992;
  /*.rainGradient();*/
}
.sensorView.precipation .sensorData .value,
.sensorView.precipation-rate .sensorData .value,
.sensorView.shower-precipation .sensorData .value,
.sensorView.precipation-probability .sensorData .value {
  color: #b5c9ff;
}
.sensorView.leaf-temperature,
.sensorView.leaf-wetness,
.sensorView.soil-temperature,
.sensorView.soil-moisture,
.sensorView.soil-ph {
  background: #1d291e;
  border-color: #314733;
  /*.leafGradient();*/
}
.sensorView.leaf-temperature .sensorData .value,
.sensorView.leaf-wetness .sensorData .value,
.sensorView.soil-temperature .sensorData .value,
.sensorView.soil-moisture .sensorData .value,
.sensorView.soil-ph .sensorData .value {
  color: #a4ff79;
}
.sensorView.wind-speed,
.sensorView.wind-direction,
.sensorView.wind-gust {
  background: #2b192e;
  border-color: #4c2b50;
  /*.windGradient();*/
}
.sensorView.wind-speed .sensorData .value,
.sensorView.wind-direction .sensorData .value,
.sensorView.wind-gust .sensorData .value {
  color: #dab8df;
}
.sensorView.wind-direction {
  flex-grow: 9999;
  flex-basis: 100%;
}
.sensorView.solar-radiation,
.sensorView.uv,
.sensorView.sunshine {
  background: #2c2b1d;
  border-color: #4e4c33;
  /*.sunGradient();*/
}
.sensorView.solar-radiation .sensorData .value,
.sensorView.uv .sensorData .value,
.sensorView.sunshine .sensorData .value {
  color: #ffd28d;
}
.sensorView .details {
  position: absolute;
  z-index: 50;
  top: 0px;
  bottom: 0px;
  left: 0px;
  right: 0px;
  background: rgba(31, 36, 45, 0.777);
  backdrop-filter: blur(5px);
  border-radius: 0.5rem;
  box-sizing: border-box;
  padding: 1.5rem;
  transition: all 0.15s ease-in-out;
  font-size: 0.8rem;
  display: flex;
  flex-direction: column;
  row-gap: 0.5rem;
}
.sensorView .details.hidden {
  visibility: none;
  pointer-events: none;
  opacity: 0;
}
.sensorView .details .buttonArea {
  margin-top: auto;
}
.sensorView .details .buttonArea button {
  background-color: #162049;
  padding: 0.6rem;
  margin-right: 0.5rem;
  border-radius: 0.4rem;
  font-weight: 600;
  border: 1px solid #96c7ff;
  color: #fff;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}
.sensorView .details .buttonArea button:active {
  transform: scale(1.05);
}
@media (pointer: fine) {
  .sensorView .details .buttonArea button:hover {
    background-color: #96c7ff;
    color: #162049;
  }
}
.sensorView .windDirectionContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.6rem 0.6rem 1.2rem 0.3rem;
}
.sensorView .windDirectionContainer svg.compass {
  height: 9rem;
  width: 9rem;
}
.sensorView .windDirectionContainer svg.arrow {
  position: absolute;
  width: 3rem;
  transition: all 0.3s ease-in-out;
}
.sensorView .sensorData {
  font-weight: 600;
  font-size: 2.8rem;
  padding: 0.6rem 0.6rem 1.2rem 0.3rem;
  display: flex;
  flex-direction: row;
  align-items: baseline;
}
.sensorView .sensorData .value {
  color: #96c7ff;
}
.sensorView .sensorData .unit {
  font-size: 1.5rem;
  margin-left: 0.5rem;
  margin-top: 0.5rem;
  font-weight: 400;
  transition: all 0.3s ease-in-out;
}
.sensorView .label {
  font-size: 0.8rem;
  display: flex;
  align-content: center;
  font-weight: 600;
  align-items: center;
}
.sensorView .label svg {
  margin-right: 0.5rem;
  width: 17px;
  height: 17px;
}
.sensorView .label .location {
  padding: 0.3rem;
  background: #344a64;
  color: #96c7ff;
  font-size: 0.6rem;
  border-radius: 0.2rem;
  margin-left: auto;
  text-transform: uppercase;
  font-weight: 800;
  letter-spacing: 0.05rem;
}
@media screen and (min-width: 450px) {
  .sensorView {
    /*.gradient1();*/
  }
}
@media screen and (min-width: 600px) {
  .sensorView {
    min-width: 15rem;
  }
}
@media screen and (min-width: 1000px) {
  .sensorView {
    min-width: 18rem;
  }
  .sensorView .windDirectionContainer svg.compass {
    height: 12rem;
    width: 12rem;
  }
  .sensorView .windDirectionContainer svg.arrow {
    width: 4rem;
  }
}
/*# sourceMappingURL=SensorView.module.css.map */